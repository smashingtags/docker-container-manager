{
  "enabled": true,
  "name": "Code Quality Analyzer",
  "description": "Monitors source code files for changes and analyzes modified code for potential improvements including code smells, design patterns, and best practices. Generates suggestions for improving readability, maintainability, and performance while preserving functionality.",
  "version": "1",
  "when": {
    "type": "fileEdited",
    "patterns": [
      "src/**/*.ts",
      "src/**/*.tsx",
      "web/src/**/*.ts",
      "web/src/**/*.tsx",
      "src/**/*.js",
      "web/src/**/*.js",
      "web/src/**/*.jsx"
    ]
  },
  "then": {
    "type": "askAgent",
    "prompt": "Analyze the modified code files for potential improvements. Focus on:\n\n1. **Code Smells**: Identify long methods, large classes, duplicate code, complex conditionals, and other maintainability issues\n2. **Design Patterns**: Suggest appropriate design patterns that could improve the code structure\n3. **Best Practices**: Check for TypeScript/JavaScript best practices, proper error handling, and consistent naming conventions\n4. **Performance**: Look for potential performance optimizations like unnecessary re-renders, inefficient algorithms, or memory leaks\n5. **Readability**: Suggest improvements for code clarity, documentation, and structure\n6. **Maintainability**: Recommend refactoring opportunities that would make the code easier to modify and extend\n\nFor each suggestion, provide:\n- Clear explanation of the issue\n- Specific code example showing the improvement\n- Reasoning for why the change would be beneficial\n- Priority level (High/Medium/Low) based on impact\n\nConsider the project context: This is a Docker container management platform built with Node.js/TypeScript backend and React frontend. Focus on suggestions that align with the modular architecture and maintain consistency with the existing codebase structure."
  }
}